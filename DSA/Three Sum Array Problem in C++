#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

vector<vector<int>> threeSum(vector<int>& nums) {
    vector<vector<int>> result;
    sort(nums.begin(), nums.end());  // Sort the array to simplify the problem.
    
    for (int i = 0; i < nums.size(); i++) {
        // Avoid duplicate triplets by skipping same elements.
        if (i > 0 && nums[i] == nums[i - 1]) continue;
        
        int left = i + 1;
        int right = nums.size() - 1;
        int target = -nums[i];  // We're trying to find two numbers that sum to -nums[i]
        
        while (left < right) {
            int sum = nums[left] + nums[right];
            
            if (sum == target) {
                // Add the triplet to the result
                result.push_back({nums[i], nums[left], nums[right]});
                
                // Move left and right to next different values to avoid duplicates
                while (left < right && nums[left] == nums[left + 1]) left++;
                while (left < right && nums[right] == nums[right - 1]) right--;
                
                left++;
                right--;
            } 
            else if (sum < target) {
                left++;  // We need a larger sum, so move the left pointer to the right
            } 
            else {
                right--;  // We need a smaller sum, so move the right pointer to the left
            }
        }
    }
    
    return result;
}

int main() {
    int n;
    
    cout << "Enter the number of elements in the array: ";
    cin >> n;
    
    vector<int> nums(n);
    
    cout << "Enter the elements of the array: ";
    for (int i = 0; i < n; i++) {
        cin >> nums[i];
    }
    
    vector<vector<int>> result = threeSum(nums);
    
    if (result.empty()) {
        cout << "No unique triplets found that sum to 0." << endl;
    } else {
        cout << "Unique triplets that sum to 0 are: " << endl;
        for (auto triplet : result) {
            cout << "[" << triplet[0] << ", " << triplet[1] << ", " << triplet[2] << "]" << endl;
        }
    }

    return 0;
}
